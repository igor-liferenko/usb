Proper steps to cleanup original Atmel's code:
1. github init demo
2. download cdc archive from ub0ali dropbox avr-usb/ directory
3. unpack
4. delete unused files and directories:
rm -fr doc/ doc.html EVK527-ATMega32U4-usbdevice_cdc-2_0_1-doc.a90 demo/EVK527-ATMega32U4-usbdevice_cdc/doc/ lib_board/evk_527/evk_527.gif demo/EVK527-ATMega32U4-usbdevice_cdc/gcc/EVK527-ATMega32U4-usbdevice_cdc.aps demo/EVK527-ATMega32U4-usbdevice_cdc/LICENSE.TXT demo/EVK527-ATMega32U4-usbdevice_cdc/iar/ lib_mcu/flash/flash_drv.s90 demo/EVK527-ATMega32U4-usbdevice_cdc/at90usbxxx_cdc.inf
5. remove trailing \r from all files
find . -type f | xargs perl -i -pe 's/\r$//'
8. git add .
9. git ci -m "initial import"
10. make it compile (fix demo/EVK527-ATMega32U4-usbdevice_cdc/usb_specific_request.c like this:
-extern U8   code *pbuffer;
+#ifdef __GNUC__
+  extern PGM_VOID_P pbuffer;
+#else
+  extern U8   code *pbuffer;
+#endif
)
11. edit demo/EVK527-ATMega32U4-usbdevice_cdc/conf/config.h (change "#define FOSC" to 16000 and "#define PLL_OUT_FRQ" to PLL_OUT_48MHZ and "#define BAUDRATE" to 57600)
patch -p1 <~/usb/cleanup.patch
12. make
13. Save "avr-objdump -d" from .elf file.
14. ~/usb/mksurrogatehdr.sh $(~/usb/listsyshdrs.sh)
14.1. Remove #if-#endif for "AVRLIBC bug #23871" from lib_mcu/power/power_drv.h
15. Run CPP:
for i in $(find . -name \*.c); do
  avr-gcc -nostdinc -Dinclude=#include -I ~/demo/ -I ~/demo/demo/EVK527-ATMega32U4-usbdevice_cdc/conf/ -I ~/demo/demo/EVK527-ATMega32U4-usbdevice_cdc/ -I ~/demo/system-headers/ -E -P $i|sponge $i
done
16: make
17. Do "avr-objdump -d" on .elf file and compare with previous - must be equal.
18. find . -name \*.h|xargs rm
----------------------------------------------
Convert include files to absolute paths:
perl -ne 'if(/^\s*#include "(.*)"/){$x=$1;$x=~s#.*/##;$y=`find . -name $x`;$y=$x if!$y;chomp$y;$y=~s#^\./##;print"#include \"",$y,"\"\n";next}print'
Expand all includes (repeat until nothing will be output to terminal):
perl -i -ne 'if(/^\s*#include "(.*)"/){$x=$1;print STDERR $x,"\n";print `cat $x`if -e $x;next}print' modules/usb/usb_task.c
The result is that infinite include occurs - they are never expanded in full. So, avr-gcc -E can produce different output than avr-gcc (this is why comparing avr-objdump is necessary). In fact, this caused a real bug when converting - 1<<PLLUSB was added to preprocessed output, while it should not have been.
